/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <zephyr/dt-bindings/dt-util.h>
#include <zephyr/dt-bindings/adc/adc.h>
#include <zephyr/dt-bindings/gpio/nordic-nrf-gpio.h>
#include <dt-bindings/zmk/matrix_transform.h>
#include <freq.h>
#include "lpgalaxy_le_zapybara-layout.dtsi"

&adc {
    status = "okay";

    #address-cells = <1>;
    #size-cells = <0>;

    /* no gpio address, does reg implys gpio address? */
    channel@3 {
        reg = <3>;
        zephyr,gain = "ADC_GAIN_1_6";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_MICROSECONDS, 40)>;
        zephyr,resolution = <12>;
    };

    channel@1 {
        reg = <1>;
        zephyr,gain = "ADC_GAIN_1_6";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME(ADC_ACQ_TIME_MICROSECONDS, 3)>;
        zephyr,resolution = <12>;
    };
};

#define MUX(label)                      \
    label: label {                        \
    	compatible = "zmk,gpio-mux";            \
        gpio-controller;                        \
        #gpio-cells = <2>;                      \
    };

/* mux pin order */
#define EC_MATRIX(_name, _bottom_mask)              \
    _name: _name {                                  \
        compatible = "zmk,kscan-ec-matrix";         \
        input-gpios                                 \
	        = <&left_mux 0 0>                   \
	        , <&left_mux 3 0>                   \
	        , <&left_mux 1 0>                   \
	        , <&left_mux 2 0>                   \
	        , <&left_mux 5 0>                   \
            , <&left_mux 4 0>                   \
            , <&left_mux 7 0>                   \
            , <&left_mux 6 0>                   \
	        , <&right_mux 0 0>                  \
	        , <&right_mux 3 0>                  \
	        , <&right_mux 1 0>                  \
	        , <&right_mux 2 0>                  \
	        , <&right_mux 5 0>                  \
            , <&right_mux 7 0>                  \
            , <&right_mux 6 0>                  \
            ;                                       \
        io-channels = <&adc 1>;                     \
        matrix-relax-us = <3>;                      \
        matrix-warm-up-us = <500>;                  \
        adc-read-settle-us = <1>;                   \
        strobe-input-masks = <0 0 0 _bottom_mask>;  \
        sleep-after-secs = <10>;                    \
        active-polling-interval-ms = <2>;           \
        idle-polling-interval-ms = <3>;             \
        sleep-polling-interval-ms = <4>;            \
        dynamic-polling-interval;                   \
    };

/ {
    model = "Le Zapybara";
    compatible = "lpgalaxy,le_zapybara", "nordic,nrf52840";

    chosen {
        zmk,kscan = &matrix;  /* may cause problem */
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
	    zerhyr,console = &cdc_acm_uart;
	    zerhyr,shell-uart = &cdc_acm_uart;
        zmk,battery = &vbatt;
	    zmk,physical-layout = &layout0;
    };

    vbatt: vbatt {
        compatible = "voltage-divider";
        io-channels = <&adc 3>;
        
        output-ohms = <2000000>;
        full-ohms = <(2000000 + 806000)>;
    };

    transform: transform {
        compatible = "zmk,matrix-transform";
        rows = <5>;
        columns = <15>;

        map = <
        RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13) RC(0,14)
        RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13)
        RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12)
        RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9) RC(3,10)          RC(3,12) RC(3,13)
        RC(4,0) RC(4,1) RC(4,2)         RC(4,4)         RC(4,6)         RC(4,8) RC(4,9)          RC(4,11) RC(4,12) RC(4,13) RC(4,14)      
        >;
    };

    MUX(left_mux)
    MUX(right_mux)
    /* what is this? */
    EC_MATRIX(matrix, (BIT(0) + BIT(1) + BIT(2) + BIT(3) + BIT(4)))
};

/*
 * &pinctrl {
 *   spi1_default: spi1_default {
 *   };
 *
 *   spi1_sleep: spi1_sleep {
 *   };
 * };
 */

/* need to work on this wake up trigger */
// &spi1 {
//    status = "okay";
//    
//    pinctrl-0 = <&spi1_default>;
//    pinctrl-1 = <&spi1_sleep>;
//    pinctrl-names = "default", "sleep";
//
//    wakeup_trigger: wakeup_trigger@0 {
//        reg = <0>;
//
//        spi-max-frequency = <DT_FREQ_M(8)>;
//
//        compatible = "zmk,adxl362-awake-trigger";
//        wakeup-source;
//
//        linked-devices = <&matrix>;
//
//        wakeup_trigger_settings: normal {
//            activity-threshold = <18>;
//            activity-time = <0>;
//            inactivity-threshold = <60>;
//            inactivity-time = <100>;
//        };
//
//        wakeup_trigger_sleep_settings: sleep {
//            activity-threshold = <140>;
//            activity-time = <0>;
//            inactivity-threshold = <500>;
//            inactivity-time = <0>;
//        };
//    };
//};

&gpiote {
	status = "okay";
};

&gpio0 {
	status = "okay";
};

&gpio1 {
	status = "okay";
};

zephyr_udc0: &usbd {
	status = "okay";
        cdc_acm_uart: cdc_acm_uart {
                compatible = "zephyr,cdc-acm-uart";
        };
};

&flash0 {
	/*
	 * For more information, see:
	 * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
	 */
	partitions {
		compatible = "fixed-partitions";
		#address-cells = <1>;
		#size-cells = <1>;

		sd_partition: partition@0 {
			label = "mbr";
			reg = <0x00000000 0x00001000>;
		};
		code_partition: partition@1000 {
			label = "code_partition";
			reg = <0x00001000 0x000d3000>;
		};

		storage_partition: partition@d4000 {
			label = "storage";
			reg = <0x000d4000 0x00020000>;
		};

		boot_partition: partition@f4000 {
			label = "adafruit_boot";
			reg = <0x000f4000 0x0000c000>;
		};
	};
};
